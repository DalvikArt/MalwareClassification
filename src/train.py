# -*- coding: utf-8 -*-
from __future__ import division, print_function, absolute_import

import tflearn
import h5py
import os

print('loading dataset...')

h5f_train = h5py.File("../dataset/dataset_227_8.h5", 'r')

X = h5f_train['X']
Y = h5f_train['Y']

import googlenet

network = googlenet.GetNetwork(9)

# to train
model = tflearn.DNN(network, checkpoint_path='../checkpoints/model_googlenet', tensorboard_dir="../logs",
                    max_checkpoints=1, tensorboard_verbose=2, best_checkpoint_path='../checkpoints/model_googlenet_best')

#model.load('../model/googlenet_malware_400epoch.tfl')

print('start trainning...')

model.fit(X, Y, n_epoch=1000, validation_set=0.1, shuffle=True,
          show_metric=True, batch_size=64, snapshot_step=200,
          snapshot_epoch=False, run_id='googlenet_malwares')


model.save('../model/googlenet_malware_600epoch.tfl')

print('done')
