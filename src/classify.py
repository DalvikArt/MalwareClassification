import sys
import os

# get binary file name
if len(sys.argv) is not 2:
    print 'Usage: ' + sys.argv[0] + ' BinaryFile' 
    exit()

srcFile = sys.argv[1]

if not os.path.exists(srcFile):
    print 'File ' + sys.argv[1] + ' not exist!'
    exit()

# create dirs
if not os.path.exists('../tmp'):
    os.mkdir('../tmp')
    os.mkdir('../tmp/1')
else :
    if not os.path.exists('../tmp/1'):
        os.mkdir('../tmp/1')

dstFile = "../tmp/1/classify.bmp"

# convert binary to bmp
import ctypes

libbmp = ctypes.cdll.LoadLibrary("./libbmp.so")
Convert = libbmp.Convert

Convert(srcFile, dstFile)

# load bmp
from tflearn.data_utils import build_hdf5_image_dataset
build_hdf5_image_dataset('../tmp', image_shape=(227, 227),
                         mode='folder', output_path='../tmp/test_dataset_227.h5',
                         categorical_labels=True, normalize=True, files_extension=['.bmp'])

import h5py
h5f_train = h5py.File('../tmp/test_dataset_227.h5', 'r')
X = h5f_train['X']

# load Model
import tflearn
import googlenet

network = googlenet.GetNetwork(9)

model = tflearn.DNN(network)
model.load('../model/400epoch/googlenet_malware_400epoch.tfl')

# classify
malwareList =['Ramnit', 'Lollipop', 'Kelihos_ver3', 'Vundo', 'Simda', 'Tracur', 'Kelihos_ver1', 'Obfuscator.ACY', 'Gatak']

import numpy
result = numpy.argmax(model.predict(X[0].reshape([-1,227,227,3]))[0])

print srcFile + ': ' + malwareList[result-1]